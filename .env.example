# =============================================
# Environment Configuration Example File
# Copy this file to .env and adjust the values
# =============================================

## ----  BASIC SYSTEM CONFIGURATION ----

# Web Application Settings
WEB_NODE_ENV="self-hosted"                    # self-hosted, development, production
WEB_HOSTNAME_API="localhost"                  # API hostname
WEB_PORT_API=3001                            # API port
WEB_PORT=3000                                # Web application port
GLOBAL_API_CONTAINER_NAME="kodus-orchestrator" # API container name

# Authentication Settings
WEB_NEXTAUTH_URL="http://localhost:3000"      # Base URL for authentication
WEB_NEXTAUTH_SECRET=""                        # NextAuth secret key (generate with: openssl rand -base64 32)
WEB_JWT_SECRET_KEY=""                         # JWT secret key (generate with: openssl rand -base64 32)

## ----  API CONFIGURATION ----

# General API Settings
API_NODE_ENV="development"                    # development, production, test
API_LOG_LEVEL=error                           # error, warn, info, debug
API_LOG_PRETTY=true                           # Log formatting
API_HOST=0.0.0.0                             # API host
API_PORT=3001                                # API port
API_RATE_MAX_REQUEST=100                      # Request rate limit
API_RATE_INTERVAL=1000                        # Rate limit interval in ms
API_CLOUD_MODE=false                          # Enable/disable cloud mode
API_CRYPTO_KEY=                               # Crypto key for encryption/decryption

# JWT Configuration
API_JWT_EXPIRES_IN=365d                       # Token expiration time
API_JWT_SECRET=secret                         # JWT secret key
API_JWT_REFRESHSECRET=refreshSecret           # Refresh token secret key
API_JWT_REFRESH_EXPIRES_IN=7d                 # Refresh token expiration time

## ----  DATABASE CONFIGURATION ----

# PostgreSQL Settings
API_DATABASE_ENV="development"                # development, production, test
API_PG_DB_HOST=db_kodus_postgres              # PostgreSQL host
API_PG_DB_PORT=5432                          # PostgreSQL port
API_PG_DB_USERNAME=kodusdev                  # Database username
API_PG_DB_PASSWORD=                          # Database password
API_PG_DB_DATABASE=kodus_db                  # Database name

# MongoDB Settings
API_MG_DB_HOST=db_kodus_mongodb              # MongoDB host
API_MG_DB_PORT=27017                         # MongoDB port
API_MG_DB_USERNAME=kodusdev                  # Database username
API_MG_DB_PASSWORD=                        # Database password
API_MG_DB_DATABASE=123456                  # Database name
API_MG_DB_PRODUCTION_CONFIG=''               # Additional production settings

## ----  LLM API KEYS ----

# API Keys for LLM Providers
API_OPEN_AI_APIKEY=                          # OpenAI API key
API_GOOGLE_AI_API_KEY=                       # Google AI API key
API_ANTHROPIC_API_KEY=                       # Anthropic API key
API_NOVITA_AI_API_KEY=                       # Novita AI API key
API_VERTEX_AI_API_KEY=                       # Vertex AI API key

# Available LLM Models
API_LLM_MODEL_CHATGPT_3_5_TURBO=gpt-4o-mini
API_LLM_MODEL_CHATGPT_3_5_TURBO_16K=gpt-4o-mini
API_LLM_MODEL_CHATGPT_4=gpt-4o-mini
API_LLM_MODEL_CHATGPT_4_TURBO=gpt-4o-mini
API_LLM_MODEL_CHATGPT_4_ALL=gpt-4o
API_LLM_MODEL_CHATGPT_4_ALL_MINI=gpt-4o-mini
API_LLM_MODEL_CLAUDE_3_5_SONNET=claude-3-5-sonnet-20241022
API_LLM_MODEL_CLAUDE_3_5_SONNET_20241022=claude-3-5-sonnet-20241022
API_LLM_MODEL_GEMINI_1_5_PRO=gpt-4o-mini
API_LLM_MODEL_GEMINI_1_5_PRO_EXP=gpt-4o-mini

## ----  CRON CONFIGURATION ----
# Format: minute hour day_of_month month day_of_week
# Example: 0 1 * * 5 = Every Friday at 01:00

API_CRON_AUTOMATION_INTERACTION_MONITOR=0 1 * * 5
API_CRON_AUTOMATION_ISSUES_DETAILS=0 1 * * 5
API_CRON_COMPILE_SPRINT=0 1 * * 5
API_CRON_METRICS=* 5 * * *
API_CRON_AUTOMATION_DAILY_CHECKIN=* 5 * * *
API_CRON_SPRINT_RETRO=* 5 * * *
API_CRON_TEAM_ARTIFACTS_WEEKLY=* 5 * * *
API_CRON_TEAM_ARTIFACTS_DAILY=* 5 * * *
API_CRON_AUTOMATION_TEAM_PROGRESS_TRACKER=* 5 * * *
API_CRON_ORGANIZATION_METRICS=* 5 * * *
API_CRON_AUTOMATION_EXECUTIVE_CHECKIN=* 5 * * *
API_CRON_ORGANIZATION_ARTIFACTS_WEEKLY=* 5 * * *
API_CRON_ORGANIZATION_ARTIFACTS_DAILY=* 5 * * *
API_CRON_ENRICH_TEAM_ARTIFACTS_WEEKLY=* 5 * * *
API_CRON_SYNC_CODE_REVIEW_REACTIONS=* 5 * * *

## ----  GIT INTEGRATIONS ----

# GitHub Settings (Fill only if using GitHub)
API_GITHUB_CODE_MANAGEMENT_WEBHOOK=          # GitHub webhook URL
API_GITHUB_APP_ID=                           # GitHub App ID
API_GITHUB_CLIENT_SECRET=                    # GitHub App Client Secret
API_GITHUB_PRIVATE_KEY=""                    # GitHub App Private Key
WEB_GITHUB_INSTALL_URL=""                    # GitHub App Installation URL
WEB_OAUTH_GITHUB_CLIENT_ID=""                # GitHub OAuth Client ID
WEB_OAUTH_GITHUB_CLIENT_SECRET=""            # GitHub OAuth Client Secret

# GitLab Settings (Fill only if using GitLab)
API_GITLAB_TOKEN_URL="https://gitlab.com/oauth/token"
API_GITLAB_CODE_MANAGEMENT_WEBHOOK=          # GitLab webhook URL
WEB_GITLAB_SCOPES="read_api read_user read_repository"
WEB_GITLAB_OAUTH_URL="https://gitlab.com/oauth/authorize"
WEB_OAUTH_GITLAB_CLIENT_ID=""                # GitLab OAuth Client ID
WEB_OAUTH_GITLAB_CLIENT_SECRET=""            # GitLab OAuth Client Secret

# Bitbucket Settings (Fill only if using Bitbucket)
WEB_BITBUCKET_INSTALL_URL=""                 # Bitbucket Installation URL
GLOBAL_BITBUCKET_CODE_MANAGEMENT_WEBHOOK=    # Bitbucket webhook URL

## ----  ADDITIONAL INTEGRATIONS ----

# Communication Integrations
WEB_CONNECTION_SLACK=""                      # Slack connection URL
WEB_CONNECTION_DISCORD=""                    # Discord connection URL

# JIRA Integration
WEB_JIRA_SCOPES="read%3Aissue-type%3Ajira%20read%3Aproject%3Ajira%20read%3Aproject.property%3Ajira%20read%3Auser%3Ajira%20read%3Aapplication-role%3Ajira%20read%3Aavatar%3Ajira%20read%3Agroup%3Ajira%20read%3Aissue-type-hierarchy%3Ajira%20read%3Aproject-category%3Ajira%20read%3Aproject-version%3Ajira%20read%3Aproject.component%3Ajira%20read%3Aissue-details%3Ajira%20read%3Aaudit-log%3Ajira%20read%3Afield-configuration%3Ajira%20read%3Aissue-meta%3Ajira%20read%3Aissue-security-level%3Ajira%20read%3Aissue.vote%3Ajira%20read%3Aissue.changelog%3Ajira%20read%3Aissue%3Ajira%20read%3Astatus%3Ajira%20read%3Afield%3Ajira%20write%3Awebhook%3Ajira%20read%3Awebhook%3Ajira%20read%3Aissue-status%3Ajira%20read%3Aboard-scope.admin%3Ajira-software%20read%3Ajql%3Ajira%20delete%3Awebhook%3Ajira%20read%3Acomment.property%3Ajira%20read%3Aproject-role%3Ajira%20read%3Aepic%3Ajira-software%20read%3Aboard-scope%3Ajira-software%20read%3Asprint%3Ajira-software%20read%3Afield.default-value%3Ajira%20read%3Afield.option%3Ajira%20read%3Aissue%3Ajira-software%20read%3Acomment%3Ajira%20read%3Aattachment%3Ajira%20read%3Aissue-worklog%3Ajira%20write%3Aissue-link-type%3Ajira%20write%3Afield%3Ajira%20write%3Aworkflow%3Ajira%20write%3Aproject%3Ajira"

# Support Settings
WEB_ANALYTICS_HOSTNAME=""                    # Analytics hostname
WEB_SUPPORT_DOCS_URL="https://docs.kodus.io" # Documentation URL
WEB_SUPPORT_DISCORD_INVITE_URL="https://discord.gg/CceCdAke" # Discord invite URL
WEB_SUPPORT_TALK_TO_FOUNDER_URL="https://cal.com/gabrielmalinosqui/30min" # Scheduling URL

# RabbitMQ Configuration
API_RABBITMQ_URI=                            # RabbitMQ connection URI
API_RABBITMQ_ENABLED=false                   # Enable/disable RabbitMQ